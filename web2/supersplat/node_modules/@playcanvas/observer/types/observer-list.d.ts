/**
 * A list of observers.
 *
 * @ignore
 */
export class ObserverList extends Events {
    /**
     * @param {object} [options] - Options
     * @param {boolean} [options.sorted] - Sorted
     * @param {string} [options.index] - Index
     */
    constructor(options?: {
        sorted?: boolean;
        index?: string;
    });
    data: any[];
    _indexed: {};
    sorted: true;
    index: string;
    get length(): number;
    get(index: any): any;
    set(index: any, value: any): void;
    indexOf(item: any): any;
    position(b: any, fn: any): number;
    positionNextClosest(b: any, fn: any): number;
    has(item: any): boolean;
    add(item: any): number;
    move(item: any, pos: any): void;
    remove(item: any): void;
    removeByKey(index: any): void;
    removeBy(fn: any): void;
    clear(): void;
    forEach(fn: any): void;
    find(fn: any): any[][];
    findOne(fn: any): any[];
    map(fn: any): any[];
    sort(fn: any): void;
    array(): any[];
    json(): any[];
}
import { Events } from './events.js';
