import { BindingBase } from '../BindingBase';
/**
 * Provides one way binding between an {@link IBindable} element and Observers. Any changes from
 * the element will be propagated to the observers.
 */
declare class BindingElementToObservers extends BindingBase {
    /**
     * Clone the binding and return a new instance.
     */
    clone(): BindingElementToObservers;
    private _getHistoryActionName;
    private _setValue;
    private _setValueToObservers;
    private _observerSet;
    private _addValues;
    private _removeValues;
    setValue(value: any): void;
    setValues(values: any[]): void;
    addValue(value: any): void;
    addValues(values: any[]): void;
    removeValue(value: any): void;
    removeValues(values: any[]): void;
}
export { BindingElementToObservers };
