type SearchArgs = {
    /**
     * Tolerance for how many characters of the search string must be contained in the item name. Default is 0.5.
     */
    containsCharsTolerance?: number;
    /**
     * Tolerance for how many edits are allowed between the search string and the item name. Default is 0.5.
     */
    editsDistanceTolerance?: number;
    /**
     * Limit the number of results. If not set, all results will be returned.
     */
    limitResults?: number;
};
/**
 * Perform search through items.
 *
 * @param items - Array of tuples where the first value is a string to be searched by and the
 * second value is an object to be found.
 * @param search - String to search for.
 * @param args - Search arguments.
 * @returns Array of found items.
 * @example
 * const items = [
 *     ['Item 1', { id: 1 }],
 *     ['Item 2', { id: 2 }],
 *     ['Item 3', { id: 3 }],
 * ];
 * const results = searchItems(items, 'item');
 * // results = [{ id: 1 }, { id: 2 }, { id: 3 }]
 */
export declare const searchItems: <Type>(items: [string, Type][], search?: string, args?: SearchArgs) => Type[];
export {};
