import { Container, ContainerArgs } from '../Container';
import { Element } from '../Element';
import { Label } from '../Label';
/**
 * The arguments for the {@link LabelGroup} constructor.
 */
interface LabelGroupArgs extends ContainerArgs {
    /**
     * The label text. Defaults to 'Label'.
     */
    text?: string;
    /**
     * The {@link Element} to be wrapped by the label group.
     */
    field?: Element;
    /**
     * Whether to align the label at the top of the group. Defaults to `false` which aligns it at the center.
     */
    labelAlignTop?: boolean;
    /**
     * Add a native tooltip to the label.
     */
    nativeTooltip?: boolean;
}
/**
 * Represents a group of an {@link Element} and a {@link Label}. Useful for rows of labeled fields.
 */
declare class LabelGroup extends Container {
    protected _label: Label;
    protected _field: Element;
    /**
     * Creates a new LabelGroup.
     *
     * @param args - The arguments.
     */
    constructor(args?: Readonly<LabelGroupArgs>);
    /**
     * The label element.
     */
    get label(): Label;
    /**
     * The field element.
     */
    get field(): Element;
    /**
     * Sets the text of the label.
     */
    set text(value: string);
    /**
     * Gets the text of the label.
     */
    get text(): string;
    /**
     * Sets whether to align the label at the top of the group. Defaults to `false` which aligns it at the center.
     */
    set labelAlignTop(value: boolean);
    /**
     * Gets whether to align the label at the top of the group.
     */
    get labelAlignTop(): boolean;
}
export { LabelGroup, LabelGroupArgs };
