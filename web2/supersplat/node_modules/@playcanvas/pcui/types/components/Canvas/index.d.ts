import { Element, ElementArgs } from '../Element';
/**
 * The arguments for the {@link Canvas} constructor.
 */
interface CanvasArgs extends ElementArgs {
    /**
     * Whether the canvas should use the {@link https://developer.mozilla.org/en-US/docs/Web/API/Window/devicePixelRatio devicePixelRatio}.
     * Defaults to `false`.
     */
    useDevicePixelRatio?: boolean;
}
/**
 * Represents a Canvas.
 */
declare class Canvas extends Element {
    protected _width: number;
    protected _height: number;
    protected _ratio: number;
    /**
     * Creates a new Canvas.
     *
     * @param args - The arguments.
     */
    constructor(args?: Readonly<CanvasArgs>);
    /**
     * Resize the canvas using the given width and height parameters.
     *
     * @param width - The new width of the canvas.
     * @param height - The new height of the canvas.
     */
    resize(width: number, height: number): void;
    /**
     * Sets the width of the canvas.
     */
    set width(value: number);
    /**
     * Gets the width of the canvas.
     */
    get width(): number;
    /**
     * Sets the height of the canvas.
     */
    set height(value: number);
    /**
     * Gets the height of the canvas.
     */
    get height(): number;
    /**
     * Gets the pixel height of the canvas.
     */
    get pixelWidth(): number;
    /**
     * Gets the pixel height of the canvas.
     */
    get pixelHeight(): number;
    /**
     * Gets the pixel ratio of the canvas.
     */
    get pixelRatio(): number;
}
export { Canvas, CanvasArgs };
