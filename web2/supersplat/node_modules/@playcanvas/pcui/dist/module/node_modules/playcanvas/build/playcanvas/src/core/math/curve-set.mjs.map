{"version":3,"file":"curve-set.mjs","sources":["../../../../../../../../../node_modules/playcanvas/build/playcanvas/src/core/math/curve-set.js"],"sourcesContent":["import { CURVE_SMOOTHSTEP } from './constants.js';\nimport { Curve } from './curve.js';\nimport { CurveEvaluator } from './curve-evaluator.js';\n\nclass CurveSet {\n\tconstructor() {\n\t\tthis.curves = [];\n\t\tthis._type = CURVE_SMOOTHSTEP;\n\t\tif (arguments.length > 1) {\n\t\t\tfor (let i = 0; i < arguments.length; i++) {\n\t\t\t\tthis.curves.push(new Curve(arguments[i]));\n\t\t\t}\n\t\t} else {\n\t\t\tif (arguments.length === 0) {\n\t\t\t\tthis.curves.push(new Curve());\n\t\t\t} else {\n\t\t\t\tconst arg = arguments[0];\n\t\t\t\tif (typeof arg === 'number') {\n\t\t\t\t\tfor (let i = 0; i < arg; i++) {\n\t\t\t\t\t\tthis.curves.push(new Curve());\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (let i = 0; i < arg.length; i++) {\n\t\t\t\t\t\tthis.curves.push(new Curve(arg[i]));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tget length() {\n\t\treturn this.curves.length;\n\t}\n\tset type(value) {\n\t\tthis._type = value;\n\t\tfor (let i = 0; i < this.curves.length; i++) {\n\t\t\tthis.curves[i].type = value;\n\t\t}\n\t}\n\tget type() {\n\t\treturn this._type;\n\t}\n\tget(index) {\n\t\treturn this.curves[index];\n\t}\n\tvalue(time, result = []) {\n\t\tconst length = this.curves.length;\n\t\tresult.length = length;\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tresult[i] = this.curves[i].value(time);\n\t\t}\n\t\treturn result;\n\t}\n\tclone() {\n\t\tconst result = new this.constructor();\n\t\tresult.curves = [];\n\t\tfor (let i = 0; i < this.curves.length; i++) {\n\t\t\tresult.curves.push(this.curves[i].clone());\n\t\t}\n\t\tresult._type = this._type;\n\t\treturn result;\n\t}\n\tquantize(precision) {\n\t\tprecision = Math.max(precision, 2);\n\t\tconst numCurves = this.curves.length;\n\t\tconst values = new Float32Array(precision * numCurves);\n\t\tconst step = 1.0 / (precision - 1);\n\t\tfor (let c = 0; c < numCurves; c++) {\n\t\t\tconst ev = new CurveEvaluator(this.curves[c]);\n\t\t\tfor (let i = 0; i < precision; i++) {\n\t\t\t\tvalues[i * numCurves + c] = ev.evaluate(step * i);\n\t\t\t}\n\t\t}\n\t\treturn values;\n\t}\n\tquantizeClamped(precision, min, max) {\n\t\tconst result = this.quantize(precision);\n\t\tfor (let i = 0; i < result.length; ++i) {\n\t\t\tresult[i] = Math.min(max, Math.max(min, result[i]));\n\t\t}\n\t\treturn result;\n\t}\n}\n\nexport { CurveSet };\n"],"names":[],"mappings":"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","x_google_ignoreList":[0]}