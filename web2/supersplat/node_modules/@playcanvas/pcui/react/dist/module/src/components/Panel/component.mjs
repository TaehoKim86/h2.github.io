import * as React from 'react';
import { Element } from '../Element/component.mjs';
import { Panel as Panel$1 } from './index.mjs';

/**
 * The Panel is a Container that itself contains a header container and a content container. The
 * respective Container functions work using the content container. One can also append elements to
 * the header of the Panel.
 */
class Panel extends Element {
    constructor(props = {}) {
        super(props);
        this.elementClass = Panel$1;
    }
    componentDidMount() {
        this.attachElement(this.nodeElement, this.containerElement);
    }
    render() {
        let elements = React.Children.toArray(this.props.children);
        if (elements.length === 1) {
            elements = React.cloneElement(elements[0], { parent: this.element });
        }
        else if (elements.length > 0) {
            elements = elements.map((element) => React.cloneElement(element, { parent: this.element }));
        }
        return React.createElement("div", { ref: (nodeElement) => {
                this.nodeElement = nodeElement;
            } },
            React.createElement("div", { ref: (containerElement) => {
                    this.containerElement = containerElement;
                } }, elements));
    }
}
Panel.ctor = Panel$1;

export { Panel };
//# sourceMappingURL=component.mjs.map
