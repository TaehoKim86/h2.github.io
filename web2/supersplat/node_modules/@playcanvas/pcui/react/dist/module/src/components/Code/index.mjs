import { Container as Container$1 } from '../Container/index.mjs';
import { Element as Element$1 } from '../Element/index.mjs';
import { Label as Label$1 } from '../Label/index.mjs';

const CLASS_ROOT = 'pcui-code';
const CLASS_INNER = `${CLASS_ROOT}-inner`;
/**
 * Represents a code block.
 */
let Code$1 = class Code extends Container$1 {
    /**
     * Creates a new Code.
     *
     * @param args - The arguments.
     */
    constructor(args = {}) {
        super(args);
        this.class.add(CLASS_ROOT);
        this._inner = new Label$1({
            class: CLASS_INNER
        });
        this.append(this._inner);
        if (args.text) {
            this.text = args.text;
        }
    }
    /**
     * Sets the text to display in the code block.
     */
    set text(value) {
        this._text = value;
        this._inner.text = value;
    }
    /**
     * Gets the text to display in the code block.
     */
    get text() {
        return this._text;
    }
};
Element$1.register('code', Code$1);

export { Code$1 as Code };
//# sourceMappingURL=index.mjs.map
