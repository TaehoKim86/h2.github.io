import * as React from 'react';
import { Element } from '../Element/component.mjs';
import { GridViewItem as GridViewItem$1 } from '../GridViewItem/index.mjs';
import { GridView as GridView$1 } from './index.mjs';

/**
 * Represents a container that shows a flexible wrappable list of items that looks like a grid.
 * Contains GridViewItems.
 */
class GridView extends Element {
    constructor(props) {
        super(props);
        this.element = new GridView$1(Object.assign({}, props));
        this.loadChildren(this.props.children, this.element);
    }
    loadChildren(children, element) {
        if (!children)
            return;
        if (!Array.isArray(children)) {
            children = [children];
        }
        children.forEach((child) => {
            const childElement = new GridViewItem$1({ text: child.props.text });
            element.append(childElement);
            this.loadChildren(child.props.children, childElement);
        });
    }
    render() {
        return React.createElement("div", { ref: (nodeElement) => {
                if (nodeElement) {
                    nodeElement.appendChild(this.element.dom);
                }
            } });
    }
}
GridView.ctor = GridView$1;

export { GridView };
//# sourceMappingURL=component.mjs.map
