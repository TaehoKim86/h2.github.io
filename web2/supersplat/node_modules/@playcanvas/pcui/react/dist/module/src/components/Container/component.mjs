import * as React from 'react';
import { Element } from '../Element/component.mjs';
import { Container as Container$1 } from './index.mjs';

/**
 * A container is the basic building block for Elements that are grouped together.
 * A container can contain any other element including other containers.
 */
class Container extends Element {
    constructor(props = {}) {
        super(props);
        this.getParent = () => {
            return this;
        };
        this.elementClass = Container$1;
    }
    componentDidMount() {
        if (this.props.onResize) {
            this.element.on('resize', this.props.onResize);
        }
    }
    render() {
        let elements = React.Children.toArray(this.props.children);
        if (elements.length === 1) {
            elements = React.cloneElement(elements[0], { parent: this.element });
        }
        else if (elements.length > 0) {
            elements = elements.map((element) => React.cloneElement(element, { parent: this.element }));
        }
        // @ts-ignore
        return React.createElement("div", { ref: this.attachElement }, elements);
    }
}
Container.ctor = Container$1;

export { Container };
//# sourceMappingURL=component.mjs.map
